- Example of writing Nutch Plugin: http://wiki.apache.org/nutch/WritingPluginExample
- Checkout nutch trunk: svn checkout https://svn.apache.org/repos/asf/nutch/
- Use eclipse to work with nutch
  + ant eclipse
  + import nutch trunk to eclipse
- Create new plugin (Follow the existing scoring plugin such as scoring-opic)
- Add build.xm, ivy.xml, plugin.xml
- Find dependencies for ivy.xml at: http://search.maven.org/
- In trunk/build.xml, add the new plugin (search "opic" to see where to add new lines)
- conf/nutch-default.xml is for default configuration of nutch; overwriting the configurations to conf/nutch-site.xml
- Enable plugin by adding it in nutch-site.xml (key: plugin.includes)
- Add the new plugin into default.properties
- Add the new plugin into src/plugin/build.xml

- Instruction of how to compile and run nutch from eclipse: http://wiki.apache.org/nutch/RunNutchInEclipse
- If you want to add a dependency library that does not exist in maven, you should do as follow:
  + Add the library name in src/plugin/yourplugin/. Here is an example of adding weka.jar:
   <runtime>
      <library name="scoring-pageclassifier.jar">
         <export name="*"/>
      </library>
      <library name="weka.jar"/>   
   </runtime>
  + Copy the library to src/plugin/yourplugin/lib

- Common use commands:
  + run crawl: ./bin/crawl urls/ crawldb 5
  + Get stats after crawling: ./bin/nutch readdb crawldb -stats	
  + Clean: ant clean runtime
  + Check parser: ./bin/nutch parsechecker -dumpText http://www.polarisproject.org/
  + Convert crawling pages into readable format: ./bin/nutch readseg -dump new_crawl/segments/20140924182147/ output
  + See https://wiki.apache.org/nutch/CommandLineOptions to find more
